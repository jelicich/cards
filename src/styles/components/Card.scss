@use '@/styles/variables' as *;

.Card {
  aspect-ratio: 63 / 88;
  max-width: 100%;
  max-height: 100%;
  border-radius: calc(8.8% / 2) / calc(6.3% / 2);
  font-size: 100%;
  position: relative;
  background: rgb(255,255,255);
  background: linear-gradient(141deg, rgba(255,255,255,1) 0%, rgba(207,207,207,1) 33%, rgba(255,255,255,1) 66%, rgba(207,207,207,1) 100%);
  padding: 3%;
  display: flex;
  perspective: 800px;
  transform-style: preserve-3d;

  &-innerBackground {
    position: absolute;
    border-radius: calc(8.8% / 4) / calc(6.3% / 4);
    width: calc(100% - 6%);
    overflow: hidden;
    aspect-ratio: 62 / 88;
    box-shadow: 0 0 2px 3px rgba(0, 0, 0, 0.1);

    &:after {
      content: '';
      width: 100%;
      height: 100%;
      display: block;
      background: url('@/assets/nice-snow.png');
    }
  }

  &-content {
    position: relative;
    z-index: 1;
    padding: 1% 2.5% 2.5% 2.5%;
    display: flex;
    flex-direction: column;
    perspective: 800px;
    transform-style: preserve-3d;
  }

  &-glare {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border-radius: calc(8.8% / 2) / calc(6.3% / 2);
    background-image: radial-gradient(
      farthest-corner circle at var(--x) var(--y),
      hsl(200 20% 100% / 0.5) 0%,
      hsl(200 60% 2% / 1) 250%
    );
    mix-blend-mode: overlay;
    will-change: background-image;
    z-index: 3;
  }
}

.Card--foil {
  --space: 5%;
  --angle: 145deg;
  --imgsize: 50% 42%;
  --hyp: 1;
  border-radius: calc(8.8% / 2) / calc(6.3% / 2);
  background-image: /*$illusion-image,*/
    repeating-linear-gradient(0deg, rgb(255, 119, 115) calc(var(--space)* 1),
    rgba(255, 237, 95, 1) calc(var(--space)* 2),
    rgba(168, 255, 95, 1) calc(var(--space)* 3),
    rgba(131, 255, 247, 1) calc(var(--space)* 4),
    rgba(120, 148, 255, 1) calc(var(--space)* 5),
    rgb(216, 117, 255) calc(var(--space)* 6),
    rgb(255, 119, 115) calc(var(--space)* 7)),
    repeating-linear-gradient(
      var(--angle),
      #dddddd 0%, hsl(180, 10%, 60%) 3.8%,
      hsl(180, 29%, 66%) 4.5%,
      hsl(180, 10%, 60%) 5.2%,
      #9f9f9f 10%,
      #dddddd 12%
    ),
    radial-gradient(farthest-corner circle at var(--sx) var(--sy),
    rgba(0, 0, 0, .1) 12%,
    rgba(0, 0, 0, .15) 20%,
    rgba(0, 0, 0, .25) 120%);
  background-blend-mode: /*exclusion,*/
    hue,
    hard-light;
  background-size: /*var(--imgsize),*/
    200% 700%,
    300% 100%,
    200% 100%;
  background-position: /*center center,*/
    0% var(--y),
    var(--x) var(--y),
    var(--x) var(--y);
  filter: brightness(calc((var(--hyp)* 0.3) + 0.5)) contrast(2) saturate(1.5);
  z-index: 0;

  &::after {
    --space: 5%;
    --angle: 137deg;
    --imgsize: 50% 42%;
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-size: /*var(--imgsize),*/
      200% 400%,
      195% 100%,
      200% 100%;
    background-position: /*center center,*/
      0% var(--posy),
      calc(var(--posx)* -1) calc(var(--posy)* -1),
      var(--posx) var(--posy);
    filter: brightness(calc((var(--hyp)* 0.5) + .8)) contrast(1.6) saturate(1.4);
    mix-blend-mode: exclusion;
    background-image: /*$illusion-image,*/
      repeating-linear-gradient(0deg, rgb(255, 119, 115) calc(var(--space)* 1),
      rgba(255, 237, 95, 1) calc(var(--space)* 2),
      rgba(168, 255, 95, 1) calc(var(--space)* 3),
      rgba(131, 255, 247, 1) calc(var(--space)* 4), r
      gba(120, 148, 255, 1) calc(var(--space)* 5),
      rgb(216, 117, 255) calc(var(--space)* 6),
      rgb(255, 119, 115) calc(var(--space)* 7)),
      repeating-linear-gradient(var(--angle),
      #0e152e 0%, hsl(180, 10%, 60%) 3.8%,
      hsl(180, 29%, 66%) 4.5%,
      hsl(180, 10%, 60%) 5.2%,
      #0e152e 10%, #0e152e 12%),
      radial-gradient(
        farthest-corner circle at var(--mx) var(--my),
        rgba(0, 0, 0, .1) 12%,
        rgba(0, 0, 0, .15) 20%,
        rgba(0, 0, 0, .25) 120%
      );
    background-blend-mode: /*exclusion,*/ hue, hard-light;
    // background-size: var(--imgsize), 200% 700%, 300% 100%, 200% 100%;
    // background-position: center center, 0% var(--posy), var(--posx) var(--posy), var(--posx) var(--posy);
    // filter: brightness(calc((var(--hyp)* 0.3) + 0.5)) contrast(2) saturate(1.5);
  }
}

.Card--lightning {
  .Card {
    &-innerBackground {
      background: $lightning;
      background: $lightning-gradient;
    }
  }
}

.Card--fire {
  .Card {
    &-innerBackground {
      background: $fire;
      background: $fire-gradient;
    }
  }
}

.Card--water {
  .Card {
    &-innerBackground {
      background: $water;
      background: $water-gradient;
    }
  }
}

.Card--plant {
  .Card {
    &-innerBackground {
      background: $plant;
      background: $plant-gradient;
    }
  }
}

.Card--psychic {
  .Card {
    &-innerBackground {
      background: $psychic;
      background: $psychic-gradient;
    }
  }
}

.Card--fighting {
  .Card {
    &-innerBackground {
      background: $fighting;
      background: $fighting-gradient;
    }
  }
}

.Card--darkness {
  .Card {
    &Header {
      &-title {
        color: $gray-100;
      }

      .HitPoints-hp,
      .HitPoints-amount {
        color: $gray-100;
      }
    }

    &Ability {
      &-description {
        color: $gray-100;
      }
    }

    &Powers {
      &-name,
      &-points,
      &-description {
        color: $gray-100;
      }
    }

    &Footer {
      &-artist,
      &-info {
        color: $gray-100;
      }
    }

    &-innerBackground {
      background: $darkness;
      background: $darkness-gradient;
    }
  }
}

.Card--metal {
  .Card {
    &-innerBackground {
      background: $metal;
      background: $metal-gradient;
    }
  }
}

.Card--dragon {
  .Card {
    &-innerBackground {
      background: $dragon;
      background: $dragon-gradient;
    }
  }
}

.Card--fairy {
  .Card {
    &-innerBackground {
      background: $fairy;
      background: $fairy-gradient;
    }
  }
}

.Card--neutral {
  .Card {
    &-innerBackground {
      background: $neutral;
      background: $neutral-gradient;
    }
  }
}